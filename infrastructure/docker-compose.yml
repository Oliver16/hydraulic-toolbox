version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hydraulic
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      APP_DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/hydraulic
      APP_SYNC_DATABASE_URL: postgresql://postgres:postgres@db:5432/hydraulic
      APP_REDIS_URL: redis://redis:6379/0
      APP_SECRET_KEY: changeme
      CELERY_ALWAYS_EAGER: "0"
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - app-data:/app/data

  worker:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      APP_DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/hydraulic
      APP_SYNC_DATABASE_URL: postgresql://postgres:postgres@db:5432/hydraulic
      APP_REDIS_URL: redis://redis:6379/0
      APP_SECRET_KEY: changeme
    depends_on:
      - db
      - redis
    command: ["celery", "-A", "app.tasks.celery_app.celery_app", "worker", "-l", "info"]
    volumes:
      - app-data:/app/data


  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://api:8000
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  pgdata:
  app-data:

